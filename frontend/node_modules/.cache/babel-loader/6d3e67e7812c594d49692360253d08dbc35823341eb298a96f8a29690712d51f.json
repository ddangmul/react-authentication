{"ast":null,"code":"var _jsxFileName = \"/Users/jeong-eungyeong/Desktop/\\u1100\\u1162\\u1107\\u1161\\u11AF/react/udemy/22. \\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173\\u110B\\u1162\\u11B8 \\u110B\\u1175\\u11AB\\u110C\\u1173\\u11BC/frontend/src/pages/Authentication.js\";\nimport { redirect } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\n\n// AuthForm이 제출될 때마다 트리거될 작업 정의\nexport async function action({\n  request\n}) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw new Response(JSON.stringify({\n      message: \"Unsupported mode.\"\n    }), {\n      status: 422\n    });\n  }\n  const data = request.formData();\n  const authData = {\n    email: data.get(\"eamil\"),\n    password: data.get(\"password\")\n  };\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.state === 422 || response.state === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not authenticatie user.\"\n    }, {\n      status: 500\n    });\n  }\n\n  // soon: manage that token\n  return redirect(\"/\");\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","Response","JSON","stringify","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","state","ok","json","$RefreshReg$"],"sources":["/Users/jeong-eungyeong/Desktop/개발/react/udemy/22. 리액트앱 인증/frontend/src/pages/Authentication.js"],"sourcesContent":["import { redirect } from \"react-router-dom\";\n\nimport AuthForm from \"../components/AuthForm\";\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\n// AuthForm이 제출될 때마다 트리거될 작업 정의\nexport async function action({ request }) {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw new Response(JSON.stringify({ message: \"Unsupported mode.\" }), {\n      status: 422,\n    });\n  }\n\n  const data = request.formData();\n  const authData = {\n    email: data.get(\"eamil\"),\n    password: data.get(\"password\"),\n  };\n\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(authData),\n  });\n\n  if (response.state === 422 || response.state === 401) {\n    return response;\n  }\n\n  if (!response.ok) {\n    throw json({ message: \"Could not authenticatie user.\" }, { status: 500 });\n  }\n\n  // soon: manage that token\n  return redirect(\"/\");\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAE3C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;;AAEjC;AACA,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzC,MAAM,IAAIE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAoB,CAAC,CAAC,EAAE;MACnEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EAEA,MAAMC,IAAI,GAAGX,OAAO,CAACY,QAAQ,CAAC,CAAC;EAC/B,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACN,GAAG,CAAC,OAAO,CAAC;IACxBU,QAAQ,EAAEJ,IAAI,CAACN,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGb,IAAI,EAAE;IAC5Dc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEb,IAAI,CAACC,SAAS,CAACK,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAIG,QAAQ,CAACK,KAAK,KAAK,GAAG,IAAIL,QAAQ,CAACK,KAAK,KAAK,GAAG,EAAE;IACpD,OAAOL,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACM,EAAE,EAAE;IAChB,MAAMC,IAAI,CAAC;MAAEd,OAAO,EAAE;IAAgC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC3E;;EAEA;EACA,OAAOrB,QAAQ,CAAC,GAAG,CAAC;AACtB;AAAC,IAAAS,EAAA;AAAA0B,YAAA,CAAA1B,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}